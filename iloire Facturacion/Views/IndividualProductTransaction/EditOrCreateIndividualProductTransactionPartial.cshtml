@model IndividualProductTransaction

<fieldset>
	@Html.ValidationSummary(false)
	<legend>Individual Product edition</legend>
	@Html.HiddenFor(model => model.IndividualProductTransactionID)
	@Html.HiddenFor(model=>model.CustomerID)
	@Html.HiddenFor(model=>model.ComboTransactionID)
	<div class="clearfix">
		@Html.LabelFor(x => Model.ProductID, "Product", new { @class = "control-label col-sm-3" })
		<div class="input chzn-select">
			@Html.DropDownListFor(x => Model.ProductID, (SelectList)ViewBag.Products, Model.ProductID)
			@*@Html.DropDownList("Products", string.Empty)*@
			@Html.ValidationMessageFor(x => Model.ProductID)		
		</div>
	</div>

	<div class="clearfix">
		
		@Html.LabelFor(x => Model.CNYPrice, "Price/each", new {@class="control-label col-sm-3" })
		<div class="input chzn-results">
			@System.Globalization.CultureInfo.GetCultureInfo("zh-CN").NumberFormat.CurrencySymbol @Html.TextBoxFor(x=>x.CNYSellPrice,new { @readonly="readonly", @id="CNYPrice"})
			@*@Html.TextBoxCurrencyReadOnly(x=>Model.CNYSellPrice.Value, new { @readonly="readonly", @id="CNYPrice"})*@
			@Html.ValidationMessageFor(x=>Model.CNYSellPrice)			
		</div>
	</div>

	<div class="clearfix">
		@Html.LabelFor(x => Model.Number, "Number", new { @class = "control-label col-sm-3" })
		<div class="input">
			@Html.TextBoxFor(x=>Model.Number,new { @type = "number" })
		</div>
	</div>
	<div class="clearfix">
		@Html.LabelFor(x => Model.TotalPrice, "Total Price", new { @class = "control-label col-sm-3" }) 
		<div class="input">
			@System.Globalization.CultureInfo.GetCultureInfo("zh-CN").NumberFormat.CurrencySymbol @Html.TextBoxFor(x => Model.TotalPrice, new { @readonly = "readonly", @id = "TotalPrice" })

			@Html.ValidationMessageFor(x=>Model.TotalPrice)
		</div>
	</div>

	<div class="actions">
		<input type="submit" class="btn primary" value="Save" />

		@if (Model != null && Model.IndividualProductTransactionID > 0)
		{   <text>
			@Html.ActionLink("Delete", "Delete", new { id = Model.IndividualProductTransactionID, proposal = ViewBag.IsProposal }, new { @class = "btn" })
			</text>
		}
	</div>
	</fieldset>

<script type="text/javascript">
	$(document).ready(function () {
		$("#Number").change(function (args) {
			var number = $("#Number").val();
			
			var unitPrice = parseFloat($("#CNYPrice").val());
			
			if (number && unitPrice) {
				var price = number * unitPrice;

				$("#TotalPrice").val(price);
			}
		});

		$("#ProductID").change(function (args) {
			var number = $("#Number").val();
			var selectedProductID = $("#ProductID option:selected").val();
			if (selectedProductID && selectedProductID > 0) {
				var lang = '/@ViewContext.RouteData.Values["lang"]';
				$.getJSON(lang + "/IndividualProductTransaction/GetProductPrice", { ProductID: selectedProductID, Number: number }, function (data) {

					$("#CNYPrice").val(data.UnitPrice);
					$("#TotalPrice").val(data.TransactionTotalPrice);
				});
			}
		});
	});
	</script>
