@using MvcPaging;
@using CoffeeInvoice.Models.Helper;

@model IPagedList<CoffeeInvoice.Models.ViewModel.ProductViewModel>

@{
    ViewBag.Title = "Index";
}

@*<script>	
	$(document).ready(function () {
		var url = "api/ConvertCurrency/AUD/CNY/1";
		// Send an AJAX request
		$.getJSON(url)
			.done(function (data) {
				$("#rate").text(data);
			});
	});
</script>
<h4>Current Rate for AUD/CNY: <span id="rate"></span></h4>*@
<div id="ajaxResponse">
	@Html.Partial("CurrencyRate");
	<h1>List <small>of Product</small></h1>

    <p>
        @Html.ActionLink("[+] Create New", "Create", null, new { @class = "btn primary" })
    </p>
	@{Html.RenderPartial("SearchBoxCompany", "Product");}
	<div class="pagingContainer">
        @Html.Pager(Model.PageSize, Model.PageNumber, Model.TotalItemCount)
    </div>

	    <table class="zebra-striped">
        <thead>
            <th>
                Product Name
            </th>
            <th>
				AU Price
            </th>
			<th>
				CNY Price
			</th>
			<th>Sell CNY Price</th>            
            <th>Provider</th>
			<th width="160px"></th>
        </thead>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.ProductName)
            </td>
            <td>
				@Html.Raw(@Html.Currency(item.Price, "en-AU"))
               @* @Html.DisplayFor(modelItem => item.Price)*@
            </td>
			<td>
				@Html.Raw(@Html.Currency(item.CNYPrice.Value, "zh-CN"))
				@*@Html.DisplayFor(x=>item.CNYPrice)*@			
			</td>
			<td>
				@Html.Raw(@Html.Currency(item.CNYSellPrice.HasValue?item.CNYSellPrice.Value:0, "zh-CN"))
			</td>
            <td>
				@Html.DisplayFor(x=>item.Provider.Name)
            </td>			
            <td nowrap>				
                @Html.ActionLink("Edit", "Edit", new { id = item.ProductID }, new { @class = "btn primary" }) 
                @Html.ActionLink("Details", "Details", new { id = item.ProductID }, new { @class = "btn" }) 

				@if(item.IsProductPurchased.HasValue && item.IsProductPurchased.Value)
				{
					@Html.ActionLink("Delete", "Delete", new { id = item.ProductID }, new { @class = "btn disabled", disabled="disabled", title="Can not delete, product purchased" })
				}
				else
				{
					@Html.ActionLink("Delete", "Delete", new { id = item.ProductID }, new { @class = "btn" })
				}
				@Html.ActionLink("Copy", "Copy", new { id=item.ProductID}, new { @class="btn"})
            </td>
        </tr>
    }

    </table>
</div>
