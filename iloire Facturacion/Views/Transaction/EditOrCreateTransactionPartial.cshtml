@model TransactionModel
<fieldset>
	@Html.ValidationSummary(false)
	<legend>Transaction edition</legend>
	@Html.HiddenFor(model => model.TransactionID)
	@Html.HiddenFor(model=>model.Product.ProductName)

	<div class="clearfix">
		@Html.LabelFor(x => Model.CustomerID, "Customer", new { @class = "control-label col-sm-2" })
		<div class="input chzn-select">
			@Html.DropDownListFor(x => Model.CustomerID, (SelectList)ViewBag.Customers, string.Empty)
			@*@Html.DropDownList("Customers", string.Empty)*@
			@Html.ValidationMessageFor(x => Model.CustomerID)
		</div>
	</div>
	<div class="clearfix">
		@Html.LabelFor(x => Model.ProductID, "Product", new { @class = "control-label col-sm-2" })
		<div class="input chzn-select">
			@Html.DropDownListFor(x => Model.ProductID, (SelectList)ViewBag.Products, string.Empty)
			@*@Html.DropDownList("Products", string.Empty)*@
			@Html.ValidationMessageFor(x => Model.ProductID)
		</div>
	</div>
	<div class="clearfix">
		@Html.LabelFor(x => Model.Product.CNYPrice, "Price/each", new {@class="control-label col-sm-2" })
		<div class="input chzn-results">
			@Html.TextBoxCurrencyReadOnly(x=>Model.Product.CNYSellPrice.Value, new { @readonly="readonly", @id="CNYPrice"})
			@Html.ValidationMessageFor(x=>Model.Product.CNYSellPrice)
			
		</div>
	</div>
	<div class="clearfix">
		@Html.LabelFor(x => Model.Number, "Number", new { @class = "control-label col-sm-2" })
		<div class="input">
			@Html.TextBoxFor(x=>Model.Number,new { @type = "number" })
		</div>
	</div>
	<div class="clearfix">
		@Html.LabelFor(x => Model.TransactionSellAmount, "Total Price", new { @class="control-label col-sm-2"})
		<div class="input">
		@Html.TextBoxCurrencyReadOnly(x=>Model.TransactionSellAmount.Value, new{@readonly="readonly", @id="TransactionSellAmount"})
			@Html.ValidationMessageFor(x=>Model.TransactionSellAmount)
		</div>
	</div>
	<div class="clearfix">
		@Html.LabelFor(x => x.TimeStamp, "Transaction Date", new { @class = "control-label col-sm-2" })
		<div class="input">
			@Html.EditorFor(x => Model.TimeStamp, "DateTime", new { Placeholder = "Transaction date time" })
		</div>
	</div>
	<div class="actions">
		<input type="submit" class="btn primary" value="Save" />

		@if (Model != null && Model.TransactionID > 0)
		{   <text>
			@Html.ActionLink("Delete", "Delete", new { id = Model.TransactionID, proposal = ViewBag.IsProposal }, new { @class = "btn" })
			</text>
		}
	</div>
</fieldset>
<script type="text/javascript">
	$(document).ready(function () {

		$("#ProductID").change(function (args) {
			var number = $("#Number").val();
			var selectedProductID = $("#ProductID option:selected").val();
			if (selectedProductID && selectedProductID > 0) {
				$.getJSON("/Transaction/GetProductPrice", { ProductID: selectedProductID,Number:number, culture:"zh-CN" }, function (data) {
					
					$("#CNYPrice").val(data.UnitPrice);
					$("#TransactionSellAmount").val(data.TransactionTotalPrice);
				});
			}
		});
		
		$("#Number").change(function (args) {
			var number = $("#Number").val();
			var unit = $("#CNYPrice").val().substring(0,1)
			var unitPrice = $("#CNYPrice").val().substring(1);

			if (number && unitPrice) {				
				$("#TransactionSellAmount").val(unit + number * unitPrice);
			}

		});
	});
</script>
